http {
  resolver consul:8600 valid=30s;  # Use Consul for DNS resolution

  # Define upstream for student service
  upstream student-service {
    server student-service.service.consul:5000;
  }

  # Define upstream for registration service
  upstream registration-service {
    server registration-service.service.consul:8001;
  }

  server {
    listen 80;

    # Reverse Proxy for student service
    location /student/ {
      proxy_pass http://student-service;  # Forward to student service
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Reverse Proxy for registration service
    location /registration/ {
      proxy_pass http://registration-service;  # Forward to registration service
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check route for Nginx
    location /health {
      return 200 'OK';
    }
  }
}
