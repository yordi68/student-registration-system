upstream student-service{
    server student-service:8000;
}

upstream registration-service{
    server registration-service:8001;
}

upstream authentication-service{
    server authentication-service:5002;
}

server{
    listen 80;
    location ^~ /register {
        proxy_pass http://authentication-service/register;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location ^~ /login {
        proxy_pass http://authentication-service/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /student{
        auth_request /auth/verify;
        rewrite ^/student/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_pass http://student-service;
        proxy_set_header Authorization $http_authorization;

        error_page 401 = @error401;
    }
    location /registration{
        auth_request /auth/verify;
        rewrite ^/registration/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_pass http://registration-service;
        proxy_set_header Authorization $http_authorization;

        error_page 401 = @error401;
    }
    location /authentication{
        rewrite ^/authentication/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_pass http://authentication-service;
    }
    # Internal route to call authentication service's verify endpoint
    location /auth/verify {
        internal;
        proxy_pass http://authentication-service/auth/verify;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_pass_request_body off;
    }

    # Handle 401 Unauthorized error
    location @error401 {
        return 401 "Unauthorized: Invalid or Expired Token";
    }
}
